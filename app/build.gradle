plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.akaita.android.easylauncher'
    id 'androidx.navigation.safeargs.kotlin'
}

def keystorePropertiesFile = rootProject.file("secret.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion rootProject.ext.buildConfig.compileSdkVersion

    defaultConfig {
        versionCode 1
        versionName '1.0.0'

        applicationId "at.florianschuster.playables"
        setProperty("archivesBaseName", "Playables-v$versionName-b$versionCode")

        targetSdkVersion rootProject.ext.buildConfig.targetSdkVersion
        minSdkVersion rootProject.ext.buildConfig.minSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue "string", "app_name", "Playables"

        buildConfigField "String", "BASE_URL", "\"https://api.rawg.io/api/\""
    }

    signingConfigs {
        if (keystorePropertiesFile.exists()) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        debug {
            versionNameSuffix '-DEBUG'
            minifyEnabled false
        }
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError true
    }
}

androidExtensions {
    experimental = true
}

apply from: rootProject.file("test-dependencies.gradle")
apply from: rootProject.file("test-dependencies-android.gradle")

dependencies {
    implementation project(path: ':core')
    implementation project(path: ':base-ui')
}


easylauncher {
    iconNames "@mipmap/ic_launcher_foreground"
    foregroundIconNames "@mipmap/ic_launcher_foreground"

    defaultFlavorNaming = true

    buildTypes {
        debug {
            filters = customColorRibbonFilter("debug", "#47BAF2", "#ffffff")
        }
        release {}
    }
}
